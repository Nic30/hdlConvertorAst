[
 {
  "__class__": "HdlLibrary",
  "name": {
   "__class__": "str",
   "val": "IEEE"
  }
 },
 {
  "__class__": "HdlImport",
  "path": {
   "__class__": "list",
   "items": [
    "IEEE",
    "std_logic_1164",
    {
     "__class__": "HdlAll"
    }
   ]
  }
 },
 {
  "__class__": "HdlImport",
  "path": {
   "__class__": "list",
   "items": [
    "IEEE",
    "numeric_std",
    {
     "__class__": "HdlAll"
    }
   ]
  }
 },
 {
  "__class__": "HdlModuleDef",
  "dec": {
   "__class__": "HdlModuleDec",
   "declaration_only": false,
   "doc": {
    "__class__": "str",
    "val": "\n    RAM where each port has an independet clock.\n    It can be configured to true dual port RAM etc.\n    It can also be configured to have write mask or to be composed from multiple smaller memories.\n\n    :note: write-first variant\n\n    .. hwt-autodoc::\n    "
   },
   "name": {
    "__class__": "str",
    "val": "RamMultiClock"
   },
   "objs": [],
   "params": [
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "ADDR_WIDTH"
     },
     "type": "INTEGER",
     "value": 8
    },
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "DATA_WIDTH"
     },
     "type": "INTEGER",
     "value": 64
    },
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "HAS_BE"
     },
     "type": "BOOLEAN",
     "value": "FALSE"
    },
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "INIT_DATA"
     },
     "type": "STRING",
     "value": {
      "__class__": "str",
      "val": "None"
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "MAX_BLOCK_DATA_WIDTH"
     },
     "type": "STRING",
     "value": {
      "__class__": "str",
      "val": "None"
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "PORT_CNT"
     },
     "type": "INTEGER",
     "value": 2
    }
   ],
   "ports": [
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_0_addr"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         7,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_0_clk"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_0_din"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "OUT",
     "name": {
      "__class__": "str",
      "val": "port_0_dout"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_0_en"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_0_we"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_1_addr"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         7,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_1_clk"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_1_din"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "OUT",
     "name": {
      "__class__": "str",
      "val": "port_1_dout"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_1_en"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "port_1_we"
     },
     "type": "STD_LOGIC"
    }
   ]
  },
  "module_name": "RamMultiClock",
  "name": {
   "__class__": "str",
   "val": "rtl"
  },
  "objs": [
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "arr_t_0"
    },
    "type": {
     "__class__": "HdlTypeType"
    },
    "value": {
     "__class__": "HdlOp",
     "fn": "INDEX",
     "ops": [
      {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          63,
          0
         ]
        }
       ]
      },
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        255,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "ram_memory"
    },
    "type": "arr_t_0"
   },
   {
    "__class__": "HdlStmProcess",
    "body": {
     "__class__": "HdlStmIf",
     "cond": {
      "__class__": "HdlOp",
      "fn": "RISING",
      "ops": [
       "port_0_clk"
      ]
     },
     "elifs": [],
     "if_true": {
      "__class__": "HdlStmIf",
      "cond": {
       "__class__": "HdlOp",
       "fn": "EQ",
       "ops": [
        "port_0_en",
        {
         "__class__": "HdlValueInt",
         "base": 256,
         "bits": 1,
         "val": "1"
        }
       ]
      },
      "elifs": [],
      "if_false": {
       "__class__": "HdlStmAssign",
       "dst": "port_0_dout",
       "is_blocking": false,
       "labels": [],
       "src": {
        "__class__": "HdlValueInt",
        "base": 2,
        "bits": 64,
        "val": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
       }
      },
      "if_true": {
       "__class__": "HdlStmBlock",
       "body": [
        {
         "__class__": "HdlStmIf",
         "cond": {
          "__class__": "HdlOp",
          "fn": "EQ",
          "ops": [
           "port_0_we",
           {
            "__class__": "HdlValueInt",
            "base": 256,
            "bits": 1,
            "val": "1"
           }
          ]
         },
         "elifs": [],
         "if_true": {
          "__class__": "HdlStmAssign",
          "dst": {
           "__class__": "HdlOp",
           "fn": "INDEX",
           "ops": [
            "ram_memory",
            {
             "__class__": "HdlOp",
             "fn": "CALL",
             "ops": [
              "TO_INTEGER",
              {
               "__class__": "HdlOp",
               "fn": "CALL",
               "ops": [
                "UNSIGNED",
                "port_0_addr"
               ]
              }
             ]
            }
           ]
          },
          "is_blocking": false,
          "labels": [],
          "src": "port_0_din"
         },
         "labels": []
        },
        {
         "__class__": "HdlStmAssign",
         "dst": "port_0_dout",
         "is_blocking": false,
         "labels": [],
         "src": {
          "__class__": "HdlOp",
          "fn": "INDEX",
          "ops": [
           "ram_memory",
           {
            "__class__": "HdlOp",
            "fn": "CALL",
            "ops": [
             "TO_INTEGER",
             {
              "__class__": "HdlOp",
              "fn": "CALL",
              "ops": [
               "UNSIGNED",
               "port_0_addr"
              ]
             }
            ]
           }
          ]
         }
        }
       ],
       "join_t": "SEQ",
       "labels": []
      },
      "labels": []
     },
     "labels": []
    },
    "labels": [
     {
      "__class__": "str",
      "val": "assig_process_port_0_dout"
     }
    ],
    "sensitivity": [
     "port_0_clk"
    ]
   },
   {
    "__class__": "HdlStmProcess",
    "body": {
     "__class__": "HdlStmIf",
     "cond": {
      "__class__": "HdlOp",
      "fn": "RISING",
      "ops": [
       "port_1_clk"
      ]
     },
     "elifs": [],
     "if_true": {
      "__class__": "HdlStmIf",
      "cond": {
       "__class__": "HdlOp",
       "fn": "EQ",
       "ops": [
        "port_1_en",
        {
         "__class__": "HdlValueInt",
         "base": 256,
         "bits": 1,
         "val": "1"
        }
       ]
      },
      "elifs": [],
      "if_false": {
       "__class__": "HdlStmAssign",
       "dst": "port_1_dout",
       "is_blocking": false,
       "labels": [],
       "src": {
        "__class__": "HdlValueInt",
        "base": 2,
        "bits": 64,
        "val": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
       }
      },
      "if_true": {
       "__class__": "HdlStmBlock",
       "body": [
        {
         "__class__": "HdlStmIf",
         "cond": {
          "__class__": "HdlOp",
          "fn": "EQ",
          "ops": [
           "port_1_we",
           {
            "__class__": "HdlValueInt",
            "base": 256,
            "bits": 1,
            "val": "1"
           }
          ]
         },
         "elifs": [],
         "if_true": {
          "__class__": "HdlStmAssign",
          "dst": {
           "__class__": "HdlOp",
           "fn": "INDEX",
           "ops": [
            "ram_memory",
            {
             "__class__": "HdlOp",
             "fn": "CALL",
             "ops": [
              "TO_INTEGER",
              {
               "__class__": "HdlOp",
               "fn": "CALL",
               "ops": [
                "UNSIGNED",
                "port_1_addr"
               ]
              }
             ]
            }
           ]
          },
          "is_blocking": false,
          "labels": [],
          "src": "port_1_din"
         },
         "labels": []
        },
        {
         "__class__": "HdlStmAssign",
         "dst": "port_1_dout",
         "is_blocking": false,
         "labels": [],
         "src": {
          "__class__": "HdlOp",
          "fn": "INDEX",
          "ops": [
           "ram_memory",
           {
            "__class__": "HdlOp",
            "fn": "CALL",
            "ops": [
             "TO_INTEGER",
             {
              "__class__": "HdlOp",
              "fn": "CALL",
              "ops": [
               "UNSIGNED",
               "port_1_addr"
              ]
             }
            ]
           }
          ]
         }
        }
       ],
       "join_t": "SEQ",
       "labels": []
      },
      "labels": []
     },
     "labels": []
    },
    "labels": [
     {
      "__class__": "str",
      "val": "assig_process_port_1_dout"
     }
    ],
    "sensitivity": [
     "port_1_clk"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "ADDR_WIDTH",
       8
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "DATA_WIDTH",
       64
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "HAS_BE",
       "FALSE"
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "INIT_DATA",
       {
        "__class__": "str",
        "val": "None"
       }
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "MAX_BLOCK_DATA_WIDTH",
       {
        "__class__": "str",
        "val": "None"
       }
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "PORT_CNT",
       2
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   }
  ]
 },
 {
  "__class__": "HdlLibrary",
  "name": {
   "__class__": "str",
   "val": "IEEE"
  }
 },
 {
  "__class__": "HdlImport",
  "path": {
   "__class__": "list",
   "items": [
    "IEEE",
    "std_logic_1164",
    {
     "__class__": "HdlAll"
    }
   ]
  }
 },
 {
  "__class__": "HdlImport",
  "path": {
   "__class__": "list",
   "items": [
    "IEEE",
    "numeric_std",
    {
     "__class__": "HdlAll"
    }
   ]
  }
 },
 {
  "__class__": "HdlModuleDef",
  "dec": {
   "__class__": "HdlModuleDec",
   "declaration_only": false,
   "doc": {
    "__class__": "str",
    "val": "\n    .. hwt-autodoc::\n    "
   },
   "name": {
    "__class__": "str",
    "val": "GroupOfBlockrams"
   },
   "objs": [],
   "params": [
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "ADDR_WIDTH"
     },
     "type": "INTEGER",
     "value": 8
    },
    {
     "__class__": "HdlIdDef",
     "direction": null,
     "name": {
      "__class__": "str",
      "val": "DATA_WIDTH"
     },
     "type": "INTEGER",
     "value": 64
    }
   ],
   "ports": [
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "addr"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         7,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "clk"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "en"
     },
     "type": "STD_LOGIC"
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "in_r_a"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "in_r_b"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "in_w_a"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "in_w_b"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "OUT",
     "name": {
      "__class__": "str",
      "val": "out_r_a"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "OUT",
     "name": {
      "__class__": "str",
      "val": "out_r_b"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "OUT",
     "name": {
      "__class__": "str",
      "val": "out_w_a"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "OUT",
     "name": {
      "__class__": "str",
      "val": "out_w_b"
     },
     "type": {
      "__class__": "HdlOp",
      "fn": "CALL",
      "ops": [
       "STD_LOGIC_VECTOR",
       {
        "__class__": "HdlOp",
        "fn": "DOWNTO",
        "ops": [
         63,
         0
        ]
       }
      ]
     }
    },
    {
     "__class__": "HdlIdDef",
     "direction": "IN",
     "name": {
      "__class__": "str",
      "val": "we"
     },
     "type": "STD_LOGIC"
    }
   ]
  },
  "module_name": "GroupOfBlockrams",
  "name": {
   "__class__": "str",
   "val": "rtl"
  },
  "objs": [
   {
    "__class__": "HdlModuleDec",
    "declaration_only": false,
    "doc": {
     "__class__": "str",
     "val": "\n    RAM where each port has an independet clock.\n    It can be configured to true dual port RAM etc.\n    It can also be configured to have write mask or to be composed from multiple smaller memories.\n\n    :note: write-first variant\n\n    .. hwt-autodoc::\n    "
    },
    "name": {
     "__class__": "str",
     "val": "RamMultiClock"
    },
    "objs": [],
    "params": [
     {
      "__class__": "HdlIdDef",
      "direction": null,
      "name": {
       "__class__": "str",
       "val": "ADDR_WIDTH"
      },
      "type": "INTEGER",
      "value": 8
     },
     {
      "__class__": "HdlIdDef",
      "direction": null,
      "name": {
       "__class__": "str",
       "val": "DATA_WIDTH"
      },
      "type": "INTEGER",
      "value": 64
     },
     {
      "__class__": "HdlIdDef",
      "direction": null,
      "name": {
       "__class__": "str",
       "val": "HAS_BE"
      },
      "type": "BOOLEAN",
      "value": "FALSE"
     },
     {
      "__class__": "HdlIdDef",
      "direction": null,
      "name": {
       "__class__": "str",
       "val": "INIT_DATA"
      },
      "type": "STRING",
      "value": {
       "__class__": "str",
       "val": "None"
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": null,
      "name": {
       "__class__": "str",
       "val": "MAX_BLOCK_DATA_WIDTH"
      },
      "type": "STRING",
      "value": {
       "__class__": "str",
       "val": "None"
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": null,
      "name": {
       "__class__": "str",
       "val": "PORT_CNT"
      },
      "type": "INTEGER",
      "value": 2
     }
    ],
    "ports": [
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_0_addr"
      },
      "type": {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          7,
          0
         ]
        }
       ]
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_0_clk"
      },
      "type": "STD_LOGIC"
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_0_din"
      },
      "type": {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          63,
          0
         ]
        }
       ]
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": "OUT",
      "name": {
       "__class__": "str",
       "val": "port_0_dout"
      },
      "type": {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          63,
          0
         ]
        }
       ]
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_0_en"
      },
      "type": "STD_LOGIC"
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_0_we"
      },
      "type": "STD_LOGIC"
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_1_addr"
      },
      "type": {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          7,
          0
         ]
        }
       ]
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_1_clk"
      },
      "type": "STD_LOGIC"
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_1_din"
      },
      "type": {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          63,
          0
         ]
        }
       ]
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": "OUT",
      "name": {
       "__class__": "str",
       "val": "port_1_dout"
      },
      "type": {
       "__class__": "HdlOp",
       "fn": "CALL",
       "ops": [
        "STD_LOGIC_VECTOR",
        {
         "__class__": "HdlOp",
         "fn": "DOWNTO",
         "ops": [
          63,
          0
         ]
        }
       ]
      }
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_1_en"
      },
      "type": "STD_LOGIC"
     },
     {
      "__class__": "HdlIdDef",
      "direction": "IN",
      "name": {
       "__class__": "str",
       "val": "port_1_we"
      },
      "type": "STD_LOGIC"
     }
    ]
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_0_addr"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        7,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_0_clk"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_0_din"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_0_dout"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_0_en"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_0_we"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_1_addr"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        7,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_1_clk"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_1_din"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_1_dout"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_1_en"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramR_port_1_we"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_0_addr"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        7,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_0_clk"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_0_din"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_0_dout"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_0_en"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_0_we"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_1_addr"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        7,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_1_clk"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_1_din"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_1_dout"
    },
    "type": {
     "__class__": "HdlOp",
     "fn": "CALL",
     "ops": [
      "STD_LOGIC_VECTOR",
      {
       "__class__": "HdlOp",
       "fn": "DOWNTO",
       "ops": [
        63,
        0
       ]
      }
     ]
    }
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_1_en"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlIdDef",
    "direction": null,
    "name": {
     "__class__": "str",
     "val": "sig_bramW_port_1_we"
    },
    "type": "STD_LOGIC"
   },
   {
    "__class__": "HdlCompInst",
    "module_name": "RamMultiClock",
    "name": "bramR_inst",
    "param_map": [
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "ADDR_WIDTH",
       8
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "DATA_WIDTH",
       64
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "HAS_BE",
       "FALSE"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "INIT_DATA",
       {
        "__class__": "str",
        "val": "None"
       }
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "MAX_BLOCK_DATA_WIDTH",
       {
        "__class__": "str",
        "val": "None"
       }
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "PORT_CNT",
       2
      ]
     }
    ],
    "port_map": [
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_addr",
       "sig_bramR_port_0_addr"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_clk",
       "sig_bramR_port_0_clk"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_din",
       "sig_bramR_port_0_din"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_dout",
       "sig_bramR_port_0_dout"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_en",
       "sig_bramR_port_0_en"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_we",
       "sig_bramR_port_0_we"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_addr",
       "sig_bramR_port_1_addr"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_clk",
       "sig_bramR_port_1_clk"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_din",
       "sig_bramR_port_1_din"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_dout",
       "sig_bramR_port_1_dout"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_en",
       "sig_bramR_port_1_en"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_we",
       "sig_bramR_port_1_we"
      ]
     }
    ]
   },
   {
    "__class__": "HdlCompInst",
    "module_name": "RamMultiClock",
    "name": "bramW_inst",
    "param_map": [
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "ADDR_WIDTH",
       8
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "DATA_WIDTH",
       64
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "HAS_BE",
       "FALSE"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "INIT_DATA",
       {
        "__class__": "str",
        "val": "None"
       }
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "MAX_BLOCK_DATA_WIDTH",
       {
        "__class__": "str",
        "val": "None"
       }
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "PORT_CNT",
       2
      ]
     }
    ],
    "port_map": [
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_addr",
       "sig_bramW_port_0_addr"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_clk",
       "sig_bramW_port_0_clk"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_din",
       "sig_bramW_port_0_din"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_dout",
       "sig_bramW_port_0_dout"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_en",
       "sig_bramW_port_0_en"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_0_we",
       "sig_bramW_port_0_we"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_addr",
       "sig_bramW_port_1_addr"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_clk",
       "sig_bramW_port_1_clk"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_din",
       "sig_bramW_port_1_din"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_dout",
       "sig_bramW_port_1_dout"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_en",
       "sig_bramW_port_1_en"
      ]
     },
     {
      "__class__": "HdlOp",
      "fn": "MAP_ASSOCIATION",
      "ops": [
       "port_1_we",
       "sig_bramW_port_1_we"
      ]
     }
    ]
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "out_r_a",
    "is_blocking": false,
    "labels": [],
    "src": "sig_bramR_port_0_dout"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "out_r_b",
    "is_blocking": false,
    "labels": [],
    "src": "sig_bramR_port_1_dout"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "out_w_a",
    "is_blocking": false,
    "labels": [],
    "src": "sig_bramW_port_0_dout"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "out_w_b",
    "is_blocking": false,
    "labels": [],
    "src": "sig_bramW_port_1_dout"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_0_addr",
    "is_blocking": false,
    "labels": [],
    "src": "addr"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_0_clk",
    "is_blocking": false,
    "labels": [],
    "src": "clk"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_0_din",
    "is_blocking": false,
    "labels": [],
    "src": "in_r_a"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_0_en",
    "is_blocking": false,
    "labels": [],
    "src": "en"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_0_we",
    "is_blocking": false,
    "labels": [],
    "src": "we"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_1_addr",
    "is_blocking": false,
    "labels": [],
    "src": "addr"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_1_clk",
    "is_blocking": false,
    "labels": [],
    "src": "clk"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_1_din",
    "is_blocking": false,
    "labels": [],
    "src": "in_r_b"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_1_en",
    "is_blocking": false,
    "labels": [],
    "src": "en"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramR_port_1_we",
    "is_blocking": false,
    "labels": [],
    "src": "we"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_0_addr",
    "is_blocking": false,
    "labels": [],
    "src": "addr"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_0_clk",
    "is_blocking": false,
    "labels": [],
    "src": "clk"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_0_din",
    "is_blocking": false,
    "labels": [],
    "src": "in_w_a"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_0_en",
    "is_blocking": false,
    "labels": [],
    "src": "en"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_0_we",
    "is_blocking": false,
    "labels": [],
    "src": "we"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_1_addr",
    "is_blocking": false,
    "labels": [],
    "src": "addr"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_1_clk",
    "is_blocking": false,
    "labels": [],
    "src": "clk"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_1_din",
    "is_blocking": false,
    "labels": [],
    "src": "in_w_b"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_1_en",
    "is_blocking": false,
    "labels": [],
    "src": "en"
   },
   {
    "__class__": "HdlStmAssign",
    "dst": "sig_bramW_port_1_we",
    "is_blocking": false,
    "labels": [],
    "src": "we"
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "ADDR_WIDTH",
       8
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   },
   {
    "__class__": "HdlOp",
    "fn": "CALL",
    "ops": [
     "assert",
     {
      "__class__": "HdlOp",
      "fn": "EQ",
      "ops": [
       "DATA_WIDTH",
       64
      ]
     },
     {
      "__class__": "str",
      "val": "Generated only for this value"
     },
     "failure"
    ]
   }
  ]
 }
]